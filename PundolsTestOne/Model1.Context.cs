//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PundolsTestOne
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PracticeDBEntities : DbContext
    {
        public PracticeDBEntities()
            : base("name=PracticeDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cours> Courses { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
    
        public virtual int procInsertCustomer(string name, string address, Nullable<int> mobileNo, Nullable<System.DateTime> birthdate, string emailId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var mobileNoParameter = mobileNo.HasValue ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(int));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("Birthdate", birthdate) :
                new ObjectParameter("Birthdate", typeof(System.DateTime));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("procInsertCustomer", nameParameter, addressParameter, mobileNoParameter, birthdateParameter, emailIdParameter);
        }
    
        public virtual ObjectResult<Customer> procToSelectCust(string custName)
        {
            var custNameParameter = custName != null ?
                new ObjectParameter("custName", custName) :
                new ObjectParameter("custName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer>("procToSelectCust", custNameParameter);
        }
    
        public virtual ObjectResult<Customer> procToSelectCust(string custName, MergeOption mergeOption)
        {
            var custNameParameter = custName != null ?
                new ObjectParameter("custName", custName) :
                new ObjectParameter("custName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Customer>("procToSelectCust", mergeOption, custNameParameter);
        }
    }
}
